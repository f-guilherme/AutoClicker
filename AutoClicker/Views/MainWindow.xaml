<Window x:Class="AutoClicker.Views.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:commands="clr-namespace:AutoClicker.Commands"
        xmlns:enums="clr-namespace:AutoClicker.Enums"
        ResizeMode="CanMinimize"
        Height="320" Width="450">
    <Window.Resources>
        <ResourceDictionary Source="../Resources/MainWindowResources.xaml"/>
    </Window.Resources>

    <Window.CommandBindings>
        <CommandBinding Command="commands:MainWindowCommands.Start" Executed="StartCommand_Execute" CanExecute="StartCommand_CanExecute"/>
        <CommandBinding Command="commands:MainWindowCommands.Stop" Executed="StopCommand_Execute" CanExecute="StopCommand_CanExecute"/>
        <CommandBinding Command="commands:MainWindowCommands.HotkeySettings" Executed="HotkeySettingsCommand_Execute"/>
        <CommandBinding Command="commands:MainWindowCommands.Exit" Executed="ExitCommand_Execute"/>
        <CommandBinding Command="commands:MainWindowCommands.About" Executed="AboutCommand_Execute"/>
    </Window.CommandBindings>

    <Grid Name="mainWindowGrid">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>

        <DockPanel Name="menuDockPanel" Grid.Row="0">
            <Menu DockPanel.Dock="Top">
                <MenuItem Header="_Help">
                    <MenuItem Header="_About" Click="AboutMenuItem_Click">
                        <MenuItem.Icon>
                            <Image Source="{StaticResource AboutIcon}"/>
                        </MenuItem.Icon>
                    </MenuItem>
                    <MenuItem Header="Minimize to tray" Click="MinimizeMenuItem_Click"/>
                </MenuItem>
                <MenuItem Header="_Exit" Click="ExitMenuItem_Click"/>
            </Menu>
        </DockPanel>

        <Grid Name="primaryGrid" Grid.Row="1" HorizontalAlignment="Center" VerticalAlignment="Center">
            <Grid.RowDefinitions>
                <RowDefinition Height="*"/>
                <RowDefinition Height="2*"/>
                <RowDefinition Height="2*"/>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>

            <GroupBox Name="clickIntervalGroupBox"
                      Header="Click Interval" Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="4">
                <Grid Name="clickIntervalInnerGrid"
                      HorizontalAlignment="Center" VerticalAlignment="Center">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="Auto"/>
                    </Grid.ColumnDefinitions>

                    <TextBox Grid.Column="0" Width="45"
                             Text="{Binding Hours, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"/>
                    <TextBlock Grid.Column="1" Margin="5, 0, 5, 5" Text="hours"/>
                    <TextBox Grid.Column="2" Width="45"
                             Text="{Binding Minutes, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"/>
                    <TextBlock Grid.Column="3" Margin="5, 0, 5, 5" Text="minutes"/>
                    <TextBox Grid.Column="4" Width="45"
                             Text="{Binding Seconds, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"/>
                    <TextBlock Grid.Column="5" Margin="5, 0, 5, 5" Text="seconds"/>
                    <TextBox Grid.Column="6" Width="45"
                             Text="{Binding Milliseconds, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"/>
                    <TextBlock Grid.Column="7" Margin="5, 0, 5, 5" Text="milliseconds"/>
                </Grid>
            </GroupBox>

            <GroupBox Name="clickRepeatGroupBox"
                      Header="Click Repeat" Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="2">
                <Grid Name="clickRepeatInnerGrid"
                      HorizontalAlignment="Center" VerticalAlignment="Center" Margin="0,5,0,0">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="Auto"/>
                    </Grid.ColumnDefinitions>

                    <RadioButton Grid.Row="0" Grid.Column="0" Margin="0, 0, 0, 5"
                                 Content="Infinite (Until stopped)"
                                 IsChecked="{Binding Path=SelectedRepeatMode, Converter={StaticResource EnumToBooleanConverter},
                                        ConverterParameter={x:Static enums:RepeatMode.Infinite}}"/>
                    <RadioButton Grid.Row="1" Grid.ColumnSpan="2" Margin="0, 0, 0, 5"
                                 IsChecked="{Binding Path=SelectedRepeatMode, Converter={StaticResource EnumToBooleanConverter},
                                        ConverterParameter={x:Static enums:RepeatMode.Count}}">
                        <StackPanel Orientation="Horizontal">
                            <TextBox Width="50" Margin="5, 0, 0, 0"
                                     Text="{Binding SelectedTimesToRepeat, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"/>
                            <TextBlock Text="Times" Margin="5, 0, 0, 0" />
                        </StackPanel>
                    </RadioButton>
                </Grid>
            </GroupBox>

            <GroupBox Name="clickPositionGroupBox"
                      Header="Click Position" Grid.Row="1" Grid.Column="2" Grid.ColumnSpan="2">
                <Grid Name="clickPositionInnerGrid"
                      HorizontalAlignment="Center" VerticalAlignment="Center" Margin="0,5,0,0">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="Auto"/>
                    </Grid.ColumnDefinitions>

                    <RadioButton Grid.Row="0" Grid.Column="0" Margin="0, 0, 0, 5"
                                 Content="Current Cursor Position"
                                 IsChecked="{Binding Path=SelectedLocationMode, Converter={StaticResource EnumToBooleanConverter},
                                                                                ConverterParameter={x:Static enums:LocationMode.CurrentLocation}}"/>
                    <RadioButton Grid.Row="1" Grid.ColumnSpan="2" Margin="0, 0, 0, 5"
                                 IsChecked="{Binding Path=SelectedLocationMode, Converter={StaticResource EnumToBooleanConverter},
                                                                                ConverterParameter={x:Static enums:LocationMode.PickedLocation}}">
                        <StackPanel Orientation="Horizontal">
                            <TextBlock Text="X" Margin="5, 0, 0, 0"/>
                            <TextBox Width="50" Margin="5, 0, 0, 0"
                                     Text="{Binding PickedXValue, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"/>
                            <TextBlock Text="Y" Margin="5, 0, 0, 0"/>
                            <TextBox Width="50" Margin="5, 0, 0, 0"
                                     Text="{Binding PickedYValue, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"/>
                        </StackPanel>
                    </RadioButton>
                </Grid>
            </GroupBox>

            <GroupBox Name="clickOptionGroupBox"
                      Header="Click Options" Grid.Row="2" Grid.Column="0" Grid.ColumnSpan="4">
                <UniformGrid Name="clickOptionInnerGrid"
                             HorizontalAlignment="Center" VerticalAlignment="Stretch" Rows="1" Columns="4">
                    <TextBlock Grid.Row="0" Grid.Column="0" Text="Mouse Button"
                               Margin="5, 5, 5, 5" VerticalAlignment="Center" TextAlignment="Center"/>
                    <ComboBox Grid.Row="0" Grid.Column="1" Margin="5, 5, 5, 5"
                              ItemsSource="{Binding Source={StaticResource mouseButtonValues}}"
                              SelectedIndex="0" SelectedItem="{Binding SelectedMouseButton}" HorizontalAlignment="Stretch"/>
                    <TextBlock Grid.Row="0" Grid.Column="2" Text="Click Type"
                               Margin="5, 5, 5, 5" VerticalAlignment="Center" TextAlignment="Center"/>
                    <ComboBox Grid.Row="0" Grid.Column="3" Margin="0, 5, 5, 5"
                              ItemsSource="{Binding Source={StaticResource mouseActionValues}}"
                              SelectedIndex="0" SelectedItem="{Binding SelectedMouseAction}" HorizontalAlignment="Stretch"/>
                </UniformGrid>
            </GroupBox>

            <UniformGrid Name="buttonsGrid"
                         Grid.Row="3" Grid.Column="0" Grid.ColumnSpan="4" Rows="1" Columns="3">
                <Button Name="startButton"
                        Grid.Row="0" Grid.Column="0" Margin="5"
                        Content="Start (F6)" Command="commands:MainWindowCommands.Start"/>
                <Button Name="stopButton"
                        Grid.Row="0" Grid.Column="1" Margin="5"
                        Content="Stop (F7)" Command="commands:MainWindowCommands.Stop"/>
                <Button Name="settingsButton"
                        Grid.Row="0" Grid.Column="2" Margin="5"
                        Content="Hotkey Settings" Command="commands:MainWindowCommands.HotkeySettings"/>
            </UniformGrid>
        </Grid>
        <CheckBox x:Name="TopMostCheckBox" Content="Top most" HorizontalAlignment="Left" Margin="12,238.4,0,0" Grid.Row="1" VerticalAlignment="Top" Checked="TopMostCheckBox_Checked" Unchecked="TopMostCheckBox_Unchecked"/>
    </Grid>
</Window>
